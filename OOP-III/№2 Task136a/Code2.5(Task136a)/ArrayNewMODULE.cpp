//Выполнил Стич Назар ИВТ-22
#include <iostream>                 //Подключение базовой библиотеки для вывода в командную строку строк
#include <time.h>                   //Подключение библиотеки time для будущего рандомайзера
#include <fstream>                  //Подключение библиотеки для работы с файлами
#include <string>                   //Подключение библиотеки string, для работы с путем хранения файла
#include <cassert>                          //Подключение библиотеки assert, которая в будущем будет сбрасывать команду, если будет введена фантасмогория, не соответствующая ожидаемому значению.

using namespace std;                //Подключение пространства std, чтобы сократить код

///Модуль для работы программы (Task136a.cpp) задания 136а

///Собственное пространство имен ArrayFuncs - функций массива
namespace ArrayNewFuncs{
///Функция подсчета суммы всех элементов массива
///n - количество элементов в массиве; massive - переменная массива; sum - переменная, хранящая сумму всех чисел из массива; i - переменная прокрутки цикла
float SumArray(int n, float* massive)                       
{   
    float sum = 0;                  //объявление локальной переменной sum - сумматора
    for (int i = 0; i < n; i++) {   //цикл прохода по массиву
        sum=sum+massive[i];             //суммирование чисел массива
    }
    return sum;
}

    void TestArray1() {                         //Текстовый массив 1
        float testarr1[5] = {50, 100, 150, 200, 250}; //Задание значений в массив
        assert(SumArray(5, testarr1) == 750);   //Сравнение значений
        delete testarr1;                        //Удаление тестового массива №1
    }

    void TestArray2() {                         //Текстовый массив 2
        float testarr2[6] = {-50, 50, -50, 50, -50, 50}; //Задание значений в массив
        assert(SumArray(6, testarr2) == 0);     //Сравнение значений
        delete testarr2;                        //Удаление тестового массива №2
    }

    void TestArray3() {                         //Текстовый массив 3        
        float testarr3[6] = {1.5, 2.25, 1.25, -6.25, -7.5, 10.5}; //Задание значений в массив
        assert(SumArray(6, testarr3) == 1.75);  //Сравнение значений
        delete testarr3;                        //Удаление тестового массива №3
    }

    void TestArray4() {                         //Текстовый массив 4
        float testarr4[1] = {10000}; //Задание значений в массив
        assert(SumArray(1, testarr4) == 10000); //Сравнение значений
        delete testarr4;                        //Удаление тестового массива №4
    }

    void TestArray5() {                         //Текстовый массив 5
        float testarr5[3] = {100000, 100000, -1000000}; //Задание значений в массив
        assert(SumArray(3, testarr5) == -800000);//Сравнение значений
        delete testarr5;                        //Удаление тестового массива №5
    }

    void TestArray6() {                         //Текстовый массив 6
        float testarr6[4] = {1000000, 5000000, 10000000, -20000000}; //Задание значений в массив
        assert(SumArray(4, testarr6) == -4000000);//Сравнение значений
        delete testarr6;                        //Удаление тестового массива №6
    }

    void TestArray7() {                         //Текстовый массив 7
        float testarr7[8] = {1, 2, 1, 3, 1, 4, 1, 5}; //Задание значений в массив
        assert(SumArray(8, testarr7) == 18);    //Сравнение значений
        delete testarr7;                        //Удаление тестового массива №7
    }

    void TestArray8() {                         //Текстовый массив 8
        float testarr8[7] = {1,50000,300,600000,20,7000000,4000}; //Задание значений в массив
        assert(SumArray(7, testarr8) == 7654321);//Сравнение значений
        delete testarr8;                        //Удаление тестового массива №8
    }

    void TestArray9() {                         //Текстовый массив 9    
        float testarr9[7] = {-1,-50000,300,-600000,20,7000000,4000}; //Задание значений в массив
        assert(SumArray(7, testarr9) == 6354319);//Сравнение значений
        delete testarr9;                        //Удаление тестового массива №9
    }

    void TestArray10() {                        //Текстовый массив 10
        float testarr10[40] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40}; //Задание значений в массив
        assert(SumArray(40, testarr10) == 820); //Сравнение значений
        delete testarr10;                       //Удаление тестового массива №10
    }

    void RunAllTests() {    // Проверка всех assert функции через одну функцию
        TestArray1();   //Текстовый массив 1
        TestArray2();   //Текстовый массив 2
        TestArray3();   //Текстовый массив 3
        TestArray4();   //Текстовый массив 4
        TestArray5();   //Текстовый массив 5
        TestArray6();   //Текстовый массив 6
        TestArray7();   //Текстовый массив 7
        TestArray8();   //Текстовый массив 8
        TestArray9();   //Текстовый массив 9
        TestArray10();  //Текстовый массив 10
    }
}