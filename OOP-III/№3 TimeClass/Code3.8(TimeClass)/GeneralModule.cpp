///Стич Назар Иванович ИВТ-22 (КЛАССЫ)
///Основной файл - исполнитель кода
#include <iostream>                                         //Подключение библиотеки для ввода вывода через консоль
#include <string>                                           //Подключение библиотеки строк
#include <cassert>                                          //Подключение библиотек assert
#include "MethodNames.h"                                    //Подключение собственноого заголовочного файла класса

int main() {                                                //Главная функция - исполнитель
    const std::string ftime = "time.txt";                   //Константа имени тестового файла
    int arraySize = 6;                                      //Кол-во выделенных ячейек для массива
    int contr = 0;                                        //contr - некий пульт управления для взаимодействия с программой
    char contr2;                                            //contr2 - некий второй пульт управления для взаимодействия с программой
    int XYears,XDays,XHours,XMinutes,XSeconds,XMicroseconds,YYears,YDays,YHours,YMinutes,YSeconds,YMicroseconds; //вводимые переменные для 'времянных' групп
    long LXSeconds, LYSeconds;                              //Создание переменных для взятия значений
    Time t1,t2;                                             //определение двух групп времени 
    setlocale(LC_ALL, "Russian");                           //установка русской раскладки
    
    assertCheck(t1,t2);                                   //Проверка для программистов -assert

    Time** timeArray1 = createDynamicArray(arraySize);   //Создание первого массива переменных
    Time** timeArray2 = createDynamicArray(arraySize);   //Создание второгоо массива переменных


    do{                                                     //цикл с постусловием
    if (contr==1)                                           //если подался сигнал 1
    {       

    std::cout << "Ведите значение в годах:" << std::endl;   //Вывод строки "Ведите значение в годах:"
    do{
    std::cin >> XYears;                                     //Ввод XYears
    } while (XYears < 0);                                   //Проверка на положительное число

    std::cout << "Ведите значение в днях:" << std::endl;    //Вывод строки "Ведите значение в днях:"
    do{
    std::cin >> XDays;                                      //Ввод XDays
    } while (XDays < 0);                                    //Проверка на положительное число

    std::cout << "Ведите значение в часах:" << std::endl;   //Вывод строки "Ведите значение в часах:"
    do{
    std::cin >> XHours;                                     //Ввод XHours
    } while (XHours < 0);                                   //Проверка на положительное число

    std::cout << "Ведите значение в минутах:" << std::endl; //Вывод строки "Ведите значение в минутах:"
    do{
    std::cin >> XMinutes;                                   //Ввод XMinutes
    } while (XMinutes < 0);                                 //Проверка на положительное число

    std::cout << "Ведите значение в секундах:" << std::endl;//Вывод строки "Ведите значение в секундах:"
    do{
    std::cin >> XSeconds;                                   //Ввод YSeconds
    } while (XSeconds < 0);                                 //Проверка на положительное число

    std::cout << "Ведите значение в микросекундах:" << std::endl;       //Вывод строки "Ведите значение в микросекундах:"
    do{
    std::cin >> XMicroseconds;                                               //Ввод XMicroseconds
    } while (XMicroseconds < 0);                                             //Проверка на положительное число

    std::cout << "Первый 'времянной' массив:" << std::endl; //Вывод строки "Первый 'времянной' массив:"
    t1.setTime(XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);   //Подача аргументов для преобразования и рассчетов (конструктор)
    t1.equate();                                            //Нормализация 1ого массива
    fillTimeArray(timeArray1, 6, XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);   //Запись чисел в динамический массив переменных

    std::cout << t1.toString() << std::endl;                //Преобразование и вывод строкой

    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }
    if (contr==2)                                           //если подался сигнал 2
    {

    std::cout << "Ведите значение в годах:" << std::endl;   //Ведите значение в годах:"
    do{
    std::cin >> YYears;                                     //Ввод YYears
    } while (YYears < 0);                                   //Проверка на положительное число

    std::cout << "Ведите значение в днях:" << std::endl;    //Вывод строки "Ведите значение в днях:"
    do{
    std::cin >> YDays;                                      //Ввод YDays
    } while (YDays < 0);                                    //Проверка на положительное число

    std::cout << "Ведите значение в часах:" << std::endl;   //Вывод строки "Ведите значение в часах:"
    do{
    std::cin >> YHours;                                     //Ввод YHours
    } while (YHours < 0);                                   //Проверка на положительное число

    std::cout << "Ведите значение в минутах:" << std::endl; //Вывод строки "Ведите значение в минутах:"
    do{
    std::cin >> YMinutes;                                   //Ввод YMinutes
    } while (YMinutes < 0);                                 //Проверка на положительное число

    std::cout << "Ведите значение в секундах:" << std::endl;//Вывод строки "Ведите значение в секундах:"
    do{
    std::cin >> YSeconds;                                   //Ввод YSeconds
    } while (YSeconds < 0);                                 //Проверка на положительное число

    std::cout << "Ведите значение в микросекундах:" << std::endl;       //Вывод строки "Ведите значение в микросекундах:"
    do{
    std::cin >> YMicroseconds;                                               //Ввод YMicroseconds
    } while (YMicroseconds < 0);                                             //Проверка на положительное число

    std::cout << "Второй 'времянной' массив:" << std::endl; //Вывод строки "Второй 'времянной' массив:"
    t2.setTime(YYears, YDays, YHours, YMinutes, YSeconds, YMicroseconds);  //Подача аргументов для преобразования и рассчетов (конструктор)
    t2.equate();                                            //Нормализация 2ого массива
    fillTimeArray(timeArray2, 6, YYears, YDays, YDays, YMinutes, YSeconds, YMicroseconds);   //Запись чисел в динамический массив переменных
    std::cout << t2.toString() << std::endl;                //Преобразование и вывод строкой

    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }
    
    if (contr==3)                                           //если подался сигнал 3
    {
    std::cout << "Сложение временных массивов дает:" << std::endl;      //Вывод строки "Сложение временных массивов дает:"
    t1.addTime(t2);                                                     //Сложение каждого значения друг с дружкой
    std::cout << t1.toString() << std::endl;                            //Преобразование и вывод строкой
    std::cout << "\n";                                                  //Переход на сл. строку
    std::cout << "Вычитание временных массивов дает:" << std::endl;     //Вывод строки "Вычитание временных массивов дает:"
    t1.subtractTime(t2);                                                //Вычитание каждого значения друг с дружкой
    if (t1.getYears() < 0 || t1.getDays() < 0 || t1.getHours() < 0 || t1.getMinutes() < 0 || t1.getSeconds() < 0 || t1.getMicroseconds()){  //Если одно число из массива отрицательное...
    std::cout << "При вычитании ответ принимает отрицательную форму!" << std::endl; //Вывод строки "При вычитании ответ принимает отрицательную форму!"
    }
    else{
    std::cout << t1.toString() << std::endl;                            //Преобразование и вывод строкой
    }

    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }

    if (contr==4)                                           //если подался сигнал 4
    {
    std::cout << "Что вы хотите изменить в первом массиве, введите соответствующую букву:" << std::endl;   //Ведите значение в годах:"
    std::cout << "y или Y - года:" << std::endl;            //Вывод строки "y или Y - года:"
    std::cout << "d или D - дни:" << std::endl;             //Вывод строки "d или D - дни:"
    std::cout << "h или H - часы:" << std::endl;            //Вывод строки "h или H - часы:"
    std::cout << "m или M - минуты:" << std::endl;          //Вывод строки "m или M - минуты:"
    std::cout << "s или S - секунды:" << std::endl;         //Вывод строки "s или S - секунды:"
    std::cout << "n или N - микросекунды:" << std::endl;    //Вывод строки "n или N - микросекунды:"
    std::cin >> contr2;
    

    if (contr2=='y' || contr2=='Y'){                        //Если введено y или Y
    std::cout << "Ведите значение в годах:" << std::endl;   //Вывод строки "Ведите значение в годах:"
    do{
    std::cin >> XYears;                                     //Ввод значения XYears
    } while (XYears < 0);     
    }

    if (contr2=='d' || contr2=='D'){                        //Если введено d или D
    std::cout << "Ведите значение в днях:" << std::endl;    //Вывод строки "Ведите значение в днях:"
    do{
    std::cin >> XDays;                                      //Ввод значения XDays
    } while (XDays < 0);
    }

    if (contr2=='h' || contr2=='H'){                        //Если введено h или H
    std::cout << "Ведите значение в часах:" << std::endl;   //Вывод строки "Ведите значение в часах:"
    do{
    std::cin >> XHours;                                     //Ввод значения XHours
    } while (XHours < 0);
    }

    if (contr2=='m' || contr2=='M'){                        //Если введено m или M
    std::cout << "Ведите значение в минутах:" << std::endl; //Вывод строки "Ведите значение в минутах:"
    do{
    std::cin >> XMinutes;                                   //Ввод значения XMinutes
    } while (XMinutes < 0);
    }

    if (contr2=='s' || contr2=='S'){                        //Если введено s или S
    std::cout << "Ведите значение в секундах:" << std::endl;//Вывод строки "Ведите значение в секундах:"
    do{
    std::cin >> XSeconds;                                   //Ввод значения XSeconds
    } while (XSeconds < 0);
    }

    if (contr2=='n' || contr2=='N'){                        //Если введено n или N
    std::cout << "Ведите значение в микросекундах:" << std::endl;//Вывод строки "Ведите значение в микросекундах:"
    do{
    std::cin >> XMicroseconds;                                   //Ввод значения XMicroseconds
    } while (XMicroseconds < 0);
    }

    t1.setTime(XYears, XDays, XHours, XMinutes, XSeconds, XMicroseconds);                         //Подача аргументов для преобразования и рассчетов (конструктор)
    fillTimeArray(timeArray1, 6, XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);     //Запись чисел в динамический массив переменных
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }


    if (contr==5)                                           //если подался сигнал 5
    {
    std::cout << "Что вы хотите изменить в втором массиве, введите соответствующую букву:" << std::endl;   //Ведите значение в годах:"
    std::cout << "y или Y - года:" << std::endl;            //Вывод строки "y или Y - года:"
    std::cout << "d или D - дни:" << std::endl;             //Вывод строки "d или D - дни:"
    std::cout << "h или H - часы:" << std::endl;            //Вывод строки "h или H - часы:"
    std::cout << "m или M - минуты:" << std::endl;          //Вывод строки "m или M - минуты:"
    std::cout << "s или S - секунды:" << std::endl;         //Вывод строки "s или S - секунды:"
    std::cout << "n или N - микросекунды:" << std::endl;    //Вывод строки "n или N - микросекунды:"
    std::cin >> contr2;
    

    if (contr2=='y' || contr2=='Y'){                        //Если введено y или Y
    std::cout << "Ведите значение в годах:" << std::endl;   //Ведите значение в годах:"
    do{
    std::cin >> YYears;                                     //Ввод значения YYears
    } while (YYears < 0);     
    }

    if (contr2=='d' || contr2=='D'){                        //Если введено d или D
    std::cout << "Ведите значение в днях:" << std::endl;    //Вывод строки "Ведите значение в днях:"
    do{
    std::cin >> YDays;                                      //Ввод значения YDays
    } while (YDays < 0);     
    }

    if (contr2=='h' || contr2=='H'){                        //Если введено h или H
    std::cout << "Ведите значение в часах:" << std::endl;   //Вывод строки "Ведите значение в часах:"
    do{
    std::cin >> YHours;                                     //Ввод значения YHours
    } while (YHours < 0);     
    }

    if (contr2=='m' || contr2=='M'){                        //Если введено m или M
    std::cout << "Ведите значение в минутах:" << std::endl; //Вывод строки "Ведите значение в минутах:"
    do{
    std::cin >> YMinutes;                                   //Ввод значения YMinutes
    } while (YMinutes < 0);     
    }

    if (contr2=='s' || contr2=='S'){                        //Если введено s или S
    std::cout << "Ведите значение в секундах:" << std::endl;//Вывод строки "Ведите значение в секундах:"
    do{
    std::cin >> YSeconds;                                   //Ввод значения YSeconds
    } while (YSeconds < 0);     
    }

    if (contr2=='n' || contr2=='N'){                        //Если введено n или N
    std::cout << "Ведите значение в микросекундах:" << std::endl;//Вывод строки "Ведите значение в микросекундах:"
    do{
    std::cin >> YMicroseconds;                              //Ввод значения XMicroseconds
    } while (YMicroseconds < 0);
    }
    
    t2.setTime(YYears, YDays, YHours, YMinutes, YSeconds, YMicroseconds);                         //Подача аргументов для преобразования и рассчетов (конструктор)
    fillTimeArray(timeArray2, 6, XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);     //Запись чисел в динамический массив переменных
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }

    if (contr==6)                                           //если подался сигнал 6 
    {
    std::cout << "Первый 'времянной' массив:" << std::endl; //Вывод строки "Первый 'времянной' массив:"   
    std::cout << t1.toString() << std::endl;                //Преобразование и вывод строкой

    std::cout << "Второй 'времянной' массив:" << std::endl; //Вывод строки "Первый 'времянной' массив:"   
    std::cout << t2.toString() << std::endl;                //Преобразование и вывод строкой
    
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    } 

    if (contr==7)                                           //если подался сигнал 7 
    {
    writeTwoObjectsInFile(t1, t2, ftime);                   //Запись в файл чисел
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }

    if (contr==8)                                           //если подался сигнал 8  
    {
    readTwoObjectsInFile(t1, t2, ftime);                    //Чтение из файла чисел
    t1.equate();                                            //Нормализация 1ого массива
    t2.equate();                                            //Нормализация 2ого массива
    fillTimeArray(timeArray1, 6, XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);
    fillTimeArray(timeArray2, 6, XYears, XDays, XDays, XMinutes, XSeconds, XMicroseconds);
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }

    if (contr==9)                                           //если подался сигнал 9 
    {
    std::cout << "Какое значение переменной из первого вы хотите увидеть?, введите соответствующую букву:" << std::endl;   //Ведите значение в годах:"
    std::cout << "y или Y - года:" << std::endl;            //Вывод строки "y или Y - года:"
    std::cout << "d или D - дни:" << std::endl;             //Вывод строки "d или D - дни:"
    std::cout << "h или H - часы:" << std::endl;            //Вывод строки "h или H - часы:"
    std::cout << "m или M - минуты:" << std::endl;          //Вывод строки "m или M - минуты:"
    std::cout << "s или S - секунды:" << std::endl;         //Вывод строки "s или S - секунды:"
    std::cout << "n или N - микросекунды:" << std::endl;    //Вывод строки "n или N - микросекунды:"
    std::cin >> contr2;                        //Ввод сигнала-команды
    

    if (contr2=='y' || contr2=='Y'){           //Если введено y или Y
    std::cout << timeArray1[0]->getYears() << std::endl;   //Вывод первого числа первого массива - кол-во лет
    }
    if (contr2=='d' || contr2=='D'){           //Если введено d или D
    std::cout << timeArray1[1]->getDays() << std::endl;    //Вывод второго числа первого массива - кол-во дней
    }
    if (contr2=='h' || contr2=='H'){           //Если введено h или H
    std::cout << timeArray1[2]->getHours() << std::endl;   //Вывод третьего числа первого массива - кол-во часов
    }
    if (contr2=='m' || contr2=='M'){           //Если введено m или M
    std::cout << timeArray1[3]->getMinutes() << std::endl; //Вывод четвертого числа первого массива - кол-во минут
    }
    if (contr2=='s' || contr2=='S'){           //Если введено s или S
    std::cout << timeArray1[4]->getSeconds() << std::endl; //Вывод пятого числа первого массива - кол-во секунд
    }
    if (contr2=='n' || contr2=='N'){           //Если введено n или N
    std::cout << timeArray1[5]->getMicroseconds() << std::endl; //Вывод шестого числа первого массива - кол-во микросекунд
    }

    std::cout << "\n" << std::endl;
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды
    }

    

    if (contr==10)                                           //если подался сигнал 10 
    {
    std::cout << "Какое значение переменной из второго вы хотите увидеть?, введите соответствующую букву:" << std::endl;   //Ведите значение в годах:"
    std::cout << "y или Y - года:" << std::endl;            //Вывод строки "y или Y - года:"
    std::cout << "d или D - дни:" << std::endl;             //Вывод строки "d или D - дни:"
    std::cout << "h или H - часы:" << std::endl;            //Вывод строки "h или H - часы:"
    std::cout << "m или M - минуты:" << std::endl;          //Вывод строки "m или M - минуты:"
    std::cout << "s или S - секунды:" << std::endl;         //Вывод строки "s или S - секунды:"
    std::cout << "n или N - микросекунды:" << std::endl;    //Вывод строки "n или N - микросекунды:"
    std::cin >> contr2;
    

    if (contr2=='y' || contr2=='Y'){           //Если введено y или Y
    std::cout << timeArray2[0]->getYears() << std::endl;   //Вывод первого числа второго массива - кол-во лет
    }
    if (contr2=='d' || contr2=='D'){           //Если введено d или D
    std::cout << timeArray2[1]->getDays() << std::endl;    //Вывод второго числа второго массива - кол-во дней
    }
    if (contr2=='h' || contr2=='H'){           //Если введено h или H
    std::cout << timeArray2[2]->getHours() << std::endl;   //Вывод третьего числа второго массива - кол-во часов
    }
    if (contr2=='m' || contr2=='M'){           //Если введено m или M
    std::cout << timeArray2[3]->getMinutes() << std::endl; //Вывод четвертого числа второго массива - кол-во минут
    }
    if (contr2=='s' || contr2=='S'){           //Если введено s или S
    std::cout << timeArray2[4]->getSeconds() << std::endl; //Вывод пятого числа второго массива - кол-во секунд
    }
    if (contr2=='n' || contr2=='N'){           //Если введено n или N
    std::cout << timeArray2[5]->getMicroseconds() << std::endl; //Вывод шестого числа второго массива - кол-во микросекунд
    }
    std::cout << "\n";                         //Переход на следующую строку
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды   
    } 

    if (contr==11)                                           //если подался сигнал 11 
    {
    t1.REALTime(LXSeconds);     //Записываем в секунды РЕАЛЬНОЕ системное время
    XYears = 1970;              //Записываем 1970 в XYears
    t1.setYears(XYears);        //Установка лет (+1970 к Years для того, чтобы время показывало реальное)
    t1.equate();                //Выравнивание значений
    fillTimeArray(timeArray1, 6, t1.getYears(), t1.getDays(), t1.getHours(), t1.getMinutes(), t1.getSeconds(), t1.getMicroseconds());
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды   
    }

    if (contr==12)                                           //если подался сигнал 12 
    {
    t2.REALTime(LYSeconds);     //Записываем в секунды РЕАЛЬНОЕ системное время
    YYears = 1970;              //Записываем 1970 в YYears
    t2.setYears(YYears);        //Установка лет (+1970 к Years для того, чтобы время показывало реальное)
    t2.equate();                //Выравнивание значений
    fillTimeArray(timeArray2, 6, t2.getYears(), t2.getDays(), t2.getHours(), t2.getMinutes(), t2.getSeconds(), t2.getMicroseconds());    //Запись значений во второй массив
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                      //ввод сигнала-команды   
    }

    if (contr==0)                                         //если подался сигнал 0 (начальный сигнал для запуска цикла)
    {
    std::cout << "~~~~~~~~~~~~~~~~~~~~~~~~Список действий~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;    //Вывод строки "~~~~~~~~~~~~~~~~~~~~~~~~Список действий~~~~~~~~~~~~~~~~~~~~~~~~"
    std::cout << "0:Просмотреть список дейсвий еще раз" << std::endl;                               //Вывод строки "0:Ввести значение первого времянного массива"
    std::cout << "1:Ввести значение первого времянного массива" << std::endl;                       //Вывод строки "1:Ввести значение первого времянного массива"
    std::cout << "2:Ввести значение второго времянного массива" << std::endl;                       //Вывод строки "2:Ввести значение второго времянного массива"
    std::cout << "3:Сложение и вычитание первого и второго массива соответственно" << std::endl;    //Вывод строки "3:Сложение и вычитание первого и второго массива соответственно"
    std::cout << "4:Редактировать первый массив" << std::endl;                                      //Вывод строки "4:Редактировать первый массив"
    std::cout << "5:Редактировать второй массив" << std::endl;                                      //Вывод строки "5:Редактировать второй массив"
    std::cout << "6:Просмотр массивов" << std::endl;                                                //Вывод строки "6:Просмотр массивов"    
    std::cout << "7:Записать массивы в файл" << std::endl;                                          //Вывод строки "7:Просмотр массивов"   
    std::cout << "8:Считать массивы с файла" << std::endl;                                          //Вывод строки "8:Просмотр массивов"
    std::cout << "9:Узначть отдельное значение перового значения массива" << std::endl;             //Вывод строки "9:Узначть отдельное значение перового значения массива"
    std::cout << "10:Узначть отдельное значение второго значения массива" << std::endl;             //Вывод строки "10:Узначть отдельное значение второго значения массива"
    std::cout << "11:Ввести значение системного времени в первый массив (с точностью до секунд)" << std::endl;              //Вывод строки "11:Ввести значение системного времени в первый массив (с точностью до секунд)"
    std::cout << "12:Ввести значение системного времени во второй массив (с точностью до секунд)" << std::endl;             //Вывод строки "12:Ввести значение системного времени во второй массив (с точностью до секунд)"
    std::cout << "13:Выйти из программы" << std::endl;                                              //Вывод строки "13:Выйти из программы"
    std::cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;    //Вывод строки "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    std::cout << "Введие действие с помощью цифры:" << std::endl;       //Вывод строки "Введие действие с помощью цифры:"
    std::cin >> contr;                                       //ввод сигнала-команды     
    }
}while (contr!=13);                                          //если подался сигнал 7 (выход из цикла)
    std::cout << "Программа завершила работу!" << std::endl; //Вывод строки "Программа завершила работу!"

    deleteDynamicArray(timeArray1, arraySize);            //Освобождение памяти первого массива
    deleteDynamicArray(timeArray2, arraySize);            //Освобождение памяти второго массива
    return 0;                                                //Завершение главной функции 
}

